제 3장. 상속과 Generic Programming

<상속 (Inheritance)>
 
 IS-A 관계
- A Notebook is a Computer.
- Computer is the superclass(base class, parent class) of Notebook.
- Notebook is a subclass(extended class, child class) of Computer.

<상속과 생성자> *JAVA에서 모든 클래스에는 생성자가 적어도 하나 존재해야한다*

- 생성자가 없을 경우 자동으로 no-parameter 생성자가 만들어진다. 생성자가 하나라도 있을 경우 자동으로 만들어지지 않는다.
- 모든 서브 클래스의 생성자는 먼저 수퍼클래스의 생성자를 호출한다.
  1. super(...)를 통해 명시적으로 호출해 주거나,
  2. 그렇지 않을 경우에는 자동으로 no-parameter 생성자가 호출된다.
- 흔한 오류:
     수퍼클래스에 no-parameter 생성자가 없는데, 서브클래스의 생성자에서 super(...) 호출을 안해주는 경우
     
<메소드 오버라이딩>

부모로부터 상속받은 메소드를 조금더 자신에 맞게 고칠 수 있음, 메소드를 새로 작성

<다형성: Polymorphism> -- 객체지향에서 가장 중요한 개념!!!!!!!!!!!!!!!!! 

- 수퍼클래스 타입의 변수(참조변수)가 서브클래스 타입의 객체를 참조할 수 있다. (역은 불가능하다)
- 두 클래스는 각자의 toString()를 가지고 있다. 그렇다면 여기서 둘 중 어떤 toString() 매서드가 실행될까? 
  Notebook 클래스의 toString() 메소드가 실행된다. 
     즉 동적 바인딩(dynamic binding)이 일어난다.
- 자바에서는 동적바인딩~!!!

<3.2 Case Study: 스케쥴러 프로그램>

