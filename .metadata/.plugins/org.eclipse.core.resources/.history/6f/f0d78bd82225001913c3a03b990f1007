제 4장 연결 리스트(Linked List)

4.1 연결 리스트의 개념과 기본 연산

< 리스트 >
- 리스트(list)
     기본적인 연산: 삽입(Insert), 삭제(remove), 검색(search) 등
     리스트를 구현하는 대표적인 두 가지 방법: 배열, 연결리스트
- 배열의 단점
     크기가 고정 - reallocation이 필요
     리스트의 중간에 원소를 삽입하거나 삭제할 경우 다수의 데이터를 옮겨야
- 연결리스트
     다른 데이터의 이동없이 중간에 삽입이나 삭제가 아능하며, 길이의 제한이 없음
  but, 랜덤 엑세스가 불가능
< 노드 >
- 각각의 노드는 "데이터 필드"와 하나 혹은 그 이상의 "링크 필드"로 구성
- 링크 필드는 다음 노드를 참조
- 첫 번째 노드의 주소는 따로 저장해야 (head)
(한 노드안에 꼭 한 데이터를 넣을 필요는 없지만 여러개 데이터 넣는 경우는 일반적이지 않음)
- 두개의 클래스를 만들어야 함.

4.2 예제: 다항식 프로그램
 - 프로그램 실행 예
 $ create f      // 다항함수 f=0을 정의한다.
 $ add f 2 3     // f(x)에 2x^3을 더한다. 따라서 f(x)=2x^3 이된다.
 $ add f -1 1    // f(x) = 2x^3 - x 이 된다.
 $ add f 5 0     // f(x) = 2x^3 - x + 5 이 된다.
 $ add f 2 1     // f(x) = 2x^3 - x + 5 + 2x = 2x^3 + x + 5 이 된다.
 $ calc f 2      // x=2 일때 다항함수의 값, 즉 f(2) =23을 계산하여 출력한다.
 23
 $ print f       // 차수에 관한 내림차순으로 정렬하여 다음과 같이 출력한다.
 2X^3 + x + 5    // 동일한 차수의 항은 하나로 합쳐져야 한다.
 $ create g      // 다른 다항 함수 g를 정의한다.
 ....
 exit
 
 - 다항식의 표현
 연결리스트를 이용하여 하나의 다항식을 표현하는 클래스 polynomial을 작성한다.
 다항식을 항들의 연결리스트로 표현한다.
 항들을 차수에 대해서 내림차순으로 정렬하여 저장하며, 동일차수의 항을 2개 이상 가지지 않게 한다.
 또한 계수가 0인 항을 가지지 않게 한다.
 하나의 항은 계수와 지수에 의해 정의된다. 하나의 항을 표현하기 위해 클래스 Term을 정의한다.
 클래스 Polynomial은 다항식을 계산하는 메서드와 출력하는 메서드를 제공한다. 
 

  